class AcademicBackground(models.Model):
    institution_name = models.CharField(max_length=255)
    degree = models.CharField(max_length=255)
    field_of_study = models.CharField(max_length=255)
    start_date = models.DateField()
    end_date = models.DateField(null=True, blank=True)
    grade = models.CharField(max_length=10)

    def __str__(self):
        return self.institution_name
class Skill(models.Model):
    skill_name = models.CharField(max_length=255)

    def __str__(self):
        return self.skill_name
class Interest(models.Model):
    interest_name = models.CharField(max_length=255)

    def __str__(self):
        return self.interest_name
class Achievement(models.Model):
    title = models.CharField(max_length=255)
    description = models.TextField()
    date_earned = models.DateField()

    def __str__(self):
        return self.title

class Activity(models.Model):
    name = models.CharField(max_length=255)
    role = models.CharField(max_length=255)
    description = models.TextField()
    start_date = models.DateField()
    end_date = models.DateField(null=True, blank=True)

class ProfessionalExperience(models.Model):
    company_name = models.CharField(max_length=255)
    position = models.CharField(max_length=255)
    description = models.TextField()
    start_date = models.DateField()
    end_date = models.DateField(null=True, blank=True)


I want to create in the model by the json field. for all class. and i want to create the data inside it on the frontend



# Create a StudentProfile instance
from myapp.models import (
    StudentProfile, AcademicBackground, Skill, Interest, Achievement,
    Activity, ProfessionalExperience
)
from django.contrib.auth.models import User

# Create a user instance (if not already created)
user = User.objects.create_user(username='john_doe', password='securepassword')

# Create a student profile
student_profile = StudentProfile.objects.create(
    user=user,
    student_id='2025001',
    department='Computer Science and Engineering',
    admission_year=2023,
    graduation_year=2027,
    phone_number='1234567890',
    bio='Aspiring software engineer with a passion for AI and machine learning.',
)

# Create and associate related data
academic_background = AcademicBackground.objects.create(
    institution_name='High School XYZ',
    degree='High School Diploma',
    field_of_study='Science',
    start_date='2019-01-01',
    end_date='2023-01-01',
    grade='A'
)
student_profile.academic_backgrounds.add(academic_background)

skill = Skill.objects.create(skill_name='Python Programming')
student_profile.skills.add(skill)

interest = Interest.objects.create(interest_name='Artificial Intelligence')
student_profile.interests.add(interest)

achievement = Achievement.objects.create(
    title='Hackathon Winner',
    description='Won first place in a university-level hackathon.',
    date_earned='2024-05-15'
)
student_profile.achievements.add(achievement)

activity = Activity.objects.create(
    name='Coding Club',
    role='Member',
    description='Participated in weekly coding challenges and workshops.',
    start_date='2023-01-15',
    end_date='2024-12-20'
)
student_profile.activities.add(activity)

professional_experience = ProfessionalExperience.objects.create(
    company_name='Tech Corp',
    position='Intern',
    description='Worked on developing a web-based project management tool.',
    start_date='2024-06-01',
    end_date='2024-09-30'
)
student_profile.professional_experiences.add(professional_experience)

# Save the profile
student_profile.save()
